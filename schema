input I64_t {
	value: Int!
	value_overflow: String!
}

input Money {
	subunits: I64_t!
	currency: String!
}

input Product {
	id: ID!
	title: String!
	tags: [String!]!
	gift_card: Boolean!
}

input Variant {
	id: ID!
	product: Product!
	price: Money!
}

input Property {
	key: String!
	value: String!
}

input LineItem {
	id: String!
	variant: Variant!
	quantity: Int!
	title: String!
	properties: [Property!]!
}

input Discount {
	line_item_id: String!
	value: Int!
	title: String!
}

input DiscountCode {
	code: String!
	type: String!
	amount: Money
	percentage: Int!
}

input Customer {
	id: ID!
	email: String!
	tags: [String!]!
}

input Checkout {
	line_items: [LineItem!]!
	discount_codes: [DiscountCode!]!
	customer: Customer
}

# Currently, this query must be called run and accept a single top level argument 'input' with
# content provided by your EP
type Query {
	run(input: Checkout!): [Discount!]!
}

schema { query: Query }
